import { useState } from 'react'
import Head from 'next/head'
import { BsPlusSquareFill, BsSearch, BsEyeFill, BsBookmarkFill, BsFillArrowLeftSquareFill } from 'react-icons/bs'
import { AiFillFire, AiFillMessage, } from 'react-icons/ai'
import { IoMdArrowRoundUp } from 'react-icons/io'
import { MdNightlightRound } from 'react-icons/md'
import { FaCog } from 'react-icons/fa'
import { Transition } from '@headlessui/react'

import { motion, useAnimation } from "framer-motion"


export default function Home() {

  const data = [
    {
      name: 'Discover',
      items: [
        {
          title: 'Popular',
          icon: AiFillFire,
        },
        {
          title: 'Most Upvoted',
          icon: IoMdArrowRoundUp,
        },
        {
          title: 'Best Discussions',
          icon: AiFillMessage,
        },
        {
          title: 'Search',
          icon: BsSearch,
        },
      ]
    },
    {
      name: 'Manage',
      items: [
        {
          title: 'Bookmarks',
          icon: BsBookmarkFill,
        },
        {
          title: 'Reading history',
          icon: BsEyeFill,
        },
        {
          title: 'Focus Mode',
          icon: MdNightlightRound,
        },
        {
          title: 'Customize',
          icon: FaCog,
        },
      ]
    },
  ]
  const controls = useAnimation()
  const controlstext = useAnimation()
  const controlstextopacity = useAnimation()
  const controlsfeed = useAnimation()
  const reversecontrolsfeed = useAnimation()
  const [active, setActive] = useState(false)





  const showMore = () => {
    controls.start({
      width: "250px",
      transition: { duration: 0.001 }
    });
    controlstextopacity.start({
      opacity: 1,
      transition: { delay: 0.3 }
    })
    controlstext.start({
      opacity: 1,
      display: 'block',
      transition: { delay: 0.3 }
    })

    controlsfeed.start({
      display: 'flex',
    
    })
    reversecontrolsfeed.start({
      display: 'none',
     
    })

    setActive(true)
  }

  const showLess = () => {
    controls.start({
      width: "55px",
      transition: { duration: 0.001 }
    });
    controlsfeed.start({
      display:'none',

    })
    reversecontrolsfeed.start({
      display: 'flex',
     
    })
    controlstextopacity.start({
      opacity: 0,
     
    })
    controlstext.start({
      opacity: 0,
      display: 'none',
    })
    setActive(false)
  }


  return (
    <div className="bg-black min-h-screen w-full ">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <motion.div animate={controls} className='animation duration-500 bg-black min-h-screen group border-r pt-10 border-gray-700/70  relative shadow-xl text-gray-500 ' >
        <BsFillArrowLeftSquareFill onClick={() => {
          if (!active) {
            showMore()
          } else {
            showLess()
          }
        }} className=' cursor-pointer hidden group-hover:block animate duration-300 absolute text-white text-3xl -right-4 top-2' />



       <motion.div  animate={controlsfeed} className='border-green-400 border shadow-lg max-w-[220px] h-[120px]  px-4 flex items-center justify-center flex-col mx-4 rounded-xl shadow-green-400/40 my-auto' >
          <motion.p animate={controlstext} className='text-white font-thin'>
            Get the content you need by creating a personal feed
          </motion.p>

          <motion.button animate={controlstext} className='bg-green-400 text-black w-full font-bold rounded-xl py-2 my-2' >

            Create my feed
          </motion.button>
        </motion.div>


     <motion.div   animate={reversecontrolsfeed} className=' max-w-[220px] h-[120px]  px-4 flex items-center justify-center flex-col mx-4 rounded-xl shadow-green-400/40 my-auto' >
          <BsPlusSquareFill className='text-2xl text-green-400' />
        </motion.div>

     



        {data.map((group, index) => (
          <div key={index} className='my-4 flex flex-col ' >

            <motion.p animate={controlstextopacity} className='text-gray-500 ml-4 text-sm font-bold mb-2' >{group.name}</motion.p>


            {group.items.map((item, index2) => (
              <div key={index2} className='hover:bg-gray-400/40 px-4 py-1 flex  w-full cursor-pointer'>
                <item.icon className="text-gray-500 hover:text-gray-300 text-lg" />


                <motion.p animate={controlstext} className='text-gray-400 ml-4 text-sm font-bold' > {item.title}</motion.p>
              </div>
            ))}

          </div>
        ))}


      </motion.div>


    </div>
  )
}
